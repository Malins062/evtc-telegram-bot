from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.utils import markdown

from config_data.config import settings
from routers.card.base_handler import handle_card
from states.states import CardStates, set_input_data, Card

router = Router(name=__name__)


@router.message(CardStates.article, F.text.in_(settings.select_values['article']))
async def handle_card_article(message: types.Message, state: FSMContext):
    await state.update_data(model=True)
    value_article = settings.select_values['article'].get(message.text)
    set_input_data(state, Card(article=value_article))
    await message.answer(
        text=f'‚úî –°—Ç–∞—Ç—å—è –ö–æ–ê–ü –†–§ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ - {markdown.hbold(value_article)}',
        reply_markup=types.ReplyKeyboardRemove()
    )
    await handle_card(message, state)


@router.message(CardStates.article)
async def handle_card_invalid_article(message: types.Message):
    await message.answer(
        text=markdown.text(
            f'‚õî –û—à–∏–±–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –ö–æ–ê–ü –†–§ - "{markdown.hbold(message.text)}"',
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å—é –ö–æ–ê–ü –†–§ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ üëá',
            sep='\n',
        )
    )
