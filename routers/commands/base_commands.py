from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.utils import markdown

from config import settings
from keyboards.main import build_main_keyboard, MainButtonText

router = Router(name=__name__)


@router.message(CommandStart(), )
async def handle_start(message: types.Message, state: FSMContext):
    await message.answer(
        text=markdown.text(
            f'üëÆ‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç, {markdown.hbold(message.from_user.full_name)}!',
            '–Ø –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ–± —ç–≤–∞–∫—É–∞—Ü–∏–∏ –¢–° –≤ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ì–æ—Å–∞–≤—Ç–æ–∏–Ω—Å–ø–µ–∫—Ü–∏–∏.',
            ' ',
            f'–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ üëá',
            sep='\n'
        ),
        reply_markup=build_main_keyboard(),
    )


@router.message(Command('help', prefix=settings.prefix))
async def handle_help(message: types.Message):
    await message.answer(
        text=markdown.text(
            f'–ß–∞—Ç-–±–æ—Ç {markdown.hbold("–≠–≤–∞–∫—É–∞—Ü–∏—è –¢–°")}.',
            '–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–≤–∞–∫—É–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤–∞—Ö.',
            ' ',
            markdown.hbold('–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:'),
            f'{MainButtonText.CARD} - {markdown.hitalic("–ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏")}',
            f'{MainButtonText.CLEAR} - {markdown.hitalic("–æ—á–∏—Å—Ç–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏")}!r',
            f'{MainButtonText.SEND} - {markdown.hitalic("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –≤ –£–ì–ò–ë–î–î")}',
            ' ',
            f'–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞—Ä—É—à–µ–Ω–∏—è, –Ω–∞–∂–∞–≤ —Å–Ω–∏–∑—É üëá –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ',
            markdown.hbold(MainButtonText.CARD),
            sep='\n'
        ),
        reply_markup=build_main_keyboard(),
    )
