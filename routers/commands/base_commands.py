from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.utils import markdown

from config import settings
from keyboards.card import CardButtonText
from routers.card.handlers import handle_card
from routers.card.states import init_state

router = Router(name=__name__)


@router.message(CommandStart(), )
async def handle_start(message: types.Message, state: FSMContext):
    await message.answer(
        text=markdown.text(
            f'üëÆ‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç, {markdown.hbold(message.from_user.full_name)}!',
            '–Ø –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ–± —ç–≤–∞–∫—É–∞—Ü–∏–∏ –¢–° –≤ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ì–æ—Å–∞–≤—Ç–æ–∏–Ω—Å–ø–µ–∫—Ü–∏–∏.',
            ' ',
            '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–≤–µ–¥–µ–Ω–∏–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ',
            '1) –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —ç–≤–∞–∫—É–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –¢–°;',
            f'2) –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "{CardButtonText.SEND}".',
            sep='\n'
        ),
    )
    await init_state(state)
    await handle_card(message, state)


@router.message(Command('help', prefix=settings.prefix))
async def handle_help(message: types.Message, state: FSMContext):
    await message.answer(
        text=markdown.text(
            f'–ß–∞—Ç-–±–æ—Ç {markdown.hbold("–≠–≤–∞–∫—É–∞—Ü–∏—è –¢–°")}.',
            '–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–≤–∞–∫—É–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤–∞—Ö –≤ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ '
            '–ì–æ—Å–∞–≤—Ç–æ–∏–Ω—Å–ø–µ–∫—Ü–∏–∏.',
            ' ',
            markdown.hbold('–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:'),
            f'{CardButtonText.DT} - {markdown.hitalic("—É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –Ω–∞—Ä—É—à–µ–Ω–∏—è")}',
            f'{CardButtonText.ADDRESS} - {markdown.hitalic("—É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è")}',
            f'{CardButtonText.GN} - {markdown.hitalic("–∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Å.–Ω–æ–º–µ—Ä, –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ –¢–°")}',
            f'{CardButtonText.MODEL} - {markdown.hitalic("–∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –¢–°")}',
            f'{CardButtonText.ARTICLE} - {markdown.hitalic("—É–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—å—é –ö–æ–ê–ü –†–§")}',
            f'{CardButtonText.PROTOCOL} - {markdown.hitalic("–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è –¢–°")}',
            f'{CardButtonText.CLEAR} - {markdown.hitalic("–æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏")}',
            f'{CardButtonText.SEND} - {markdown.hitalic("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è")}',
            sep='\n'
        ),
    )
    await handle_card(message, state)
