version: "3.8"
services:

    evtc_bot:
        image: malins062/evtc-telegram-bot:latest
        container_name: evtc_bot
        restart: "always"
        stop_signal: SIGINT
        env_file:
            -  ./cfg/evtc-telegram-bot/.env
        depends_on:
            - redis
            - postgres

    redis_server:
        image: redis:latest
        container_name: db_redis
        restart: "unless-stopped"
        volumes:
            - ./redisdata:/data
#            - ./cfg/evtc-telegram-bot/redis.conf:/usr/local/etc/redis/redis.conf
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 512M
                reservations:
                    cpus: '0.25'
                    memory: 256M
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_USER=${REDIS_USER}
            - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
        ports:
            - "6380:6379"
        command: >
            sh -c '
              mkdir -p /usr/local/etc/redis &&
              echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
              echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
              echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
              echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
              echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
              echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
              redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
            '
        healthcheck:
            test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
#            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            timeout: 10s
            retries: 5
        tty: true
        stdin_open: true

    postgres:
        image: postgres:14.8-alpine3.18
        container_name: db_redis
        restart: "unless-stopped"
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - ./pg-data:/var/lib/postgresql/data
        ports:
          - "5432:5432"
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s
